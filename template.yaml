AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    sam-app

    Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 30
        MemorySize: 256
        Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
          Variables:
            TABLE_NAME: "order_table"
            ENDPOINT_OVERRIDE: ""

Resources:
  GetOrderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: target/aws-sam-java-rest-1.0.0.jar
      Handler: com.amazonaws.handler.GetOrderHandler::handleRequest
      Runtime: java8
      Events:
        GetOrder:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /orders/{order_id}
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: 'order_table'
  GetOrdersFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: target/aws-sam-java-rest-1.0.0.jar
      Handler: com.amazonaws.handler.GetOrdersHandler::handleRequest
      Runtime: java8
      Events:
        GetOrders:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /orders
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: 'order_table'
  UpdateOrderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: target/aws-sam-java-rest-1.0.0.jar
      Handler: com.amazonaws.handler.UpdateOrderHandler::handleRequest
      Runtime: java8
      Events:
        UpdateOrder:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /orders/{order_id}
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: 'order_table'
  DeleteOrderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: target/aws-sam-java-rest-1.0.0.jar
      Handler: com.amazonaws.handler.DeleteOrderHandler::handleRequest
      Runtime: java8
      Events:
        DeleteOrder:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /orders/{order_id}
            Method: delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: 'order_table'
  CreateOrderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: target/aws-sam-java-rest-1.0.0.jar
      Handler: com.amazonaws.handler.CreateOrderHandler::handleRequest
      Runtime: java8
      Events:
        CreateOrder:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /orders
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: 'order_table'
  CreateOrderPojoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: target/aws-sam-java-rest-1.0.0.jar
      Handler: com.amazonaws.handler.CreateOrderPojoHandler::handleRequest
      Runtime: java8
      Events:
        CreateOrder:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /orders_v2
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: 'order_table'

  DataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "orderId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "orderId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "order_table"

Outputs:
    GetOrderFunction:
      Description: "GetOrder Lambda Function ARN"
      Value: !GetAtt GetOrderFunction.Arn

    GetOrdersFunction:
      Description: "GetOrders Lambda Function ARN"
      Value: !GetAtt GetOrdersFunction.Arn

    UpdateOrderFunction:
      Description: "UpdateOrder Lambda Function ARN"
      Value: !GetAtt UpdateOrderFunction.Arn

    DeleteOrderFunction:
      Description: "DeleteOrder Lambda Function ARN"
      Value: !GetAtt DeleteOrderFunction.Arn

    CreateOrderFunction:
      Description: "CreateOrder Lambda Function ARN"
      Value: !GetAtt CreateOrderFunction.Arn

    CreateOrderPojoFunction:
      Description: "CreateOrder Lambda Function ARN"
      Value: !GetAtt CreateOrderPojoFunction.Arn
